/**
 


 

/**
 * 给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target  的那 两个 整数，并返回它们的数组下标。

    你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。

    你可以按任意顺序返回答案。

  示例 1：
  输入：nums = [2,7,11,15], target = 9
  输出：[0,1]
  解释：因为 nums[0] + nums[1] == 9 ，返回 [0, 1] 。

  示例 2：
  输入：nums = [3,2,4], target = 6
  输出：[1,2]
  
  示例 3：
  输入：nums = [3,3], target = 6
  输出：[0,1]
 */

/**
 * 编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。
    不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用 O(1) 的额外空间解决这一问题。

      示例 1：
      输入：s = ["h","e","l","l","o"]
      输出：["o","l","l","e","h"]
      示例 2：
      输入：s = ["H","a","n","n","a","h"]
      输出：["h","a","n","n","a","H"]
 */

  /**
   * 给你一个 32 位的有符号整数 x ，返回将 x 中的数字部分反转后的结果。
      如果反转后整数超过 32 位的有符号整数的范围 [−231,  231 − 1] ，就返回 0。 ----这行请注意
      假设环境不允许存储 64 位整数（有符号或无符号）。

      示例 1：
      输入：x = 123
      输出：321

      示例 2：
      输入：x = -123
      输出：-321
      
      示例 3：
      输入：x = 120
      输出：21
      
      示例 4：
      输入：x = 0
      输出：0
   */



